{"ast":null,"code":"import _classCallCheck from\"/Users/Krasy8/IdeaProjects/Amigocode/FullStackAppTutorial/fullStackApp/src/js/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Krasy8/IdeaProjects/Amigocode/FullStackAppTutorial/fullStackApp/src/js/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/Krasy8/IdeaProjects/Amigocode/FullStackAppTutorial/fullStackApp/src/js/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/Krasy8/IdeaProjects/Amigocode/FullStackAppTutorial/fullStackApp/src/js/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/Krasy8/IdeaProjects/Amigocode/FullStackAppTutorial/fullStackApp/src/js/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Formik}from'formik';import{Input,Tag,Button}from'antd';var EditUserForm=/*#__PURE__*/function(_Component){_inherits(EditUserForm,_Component);function EditUserForm(){_classCallCheck(this,EditUserForm);return _possibleConstructorReturn(this,_getPrototypeOf(EditUserForm).apply(this,arguments));}_createClass(EditUserForm,[{key:\"render\",value:function render(){var _this$props=this.props,submitter=_this$props.submitter,initialValues=_this$props.initialValues;return React.createElement(Formik,{initialValues:initialValues,validate:function validate(values){var errors={};if(!values.email){errors.email='Required';}else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)){errors.email='Invalid email address';}if(!values.firstName){errors.firstName='First name required';}if(!values.lastName){errors.lastName='Last name required';}return errors;},onSubmit:function onSubmit(values,_ref){var setSubmitting=_ref.setSubmitting;console.log(values);submitter(values);setSubmitting(false);}},function(_ref2){var values=_ref2.values,errors=_ref2.errors,touched=_ref2.touched,handleChange=_ref2.handleChange,isValid=_ref2.isValid,handleBlur=_ref2.handleBlur,handleSubmit=_ref2.handleSubmit,isSubmitting=_ref2.isSubmitting,submitForm=_ref2.submitForm;return React.createElement(\"form\",{onSubmit:handleSubmit},React.createElement(Input,{style:{marginBottom:'5px'},name:\"firstName\",onChange:handleChange,onBlur:handleBlur,value:values.firstName}),errors.firstName&&touched.firstName&&React.createElement(Tag,{style:{marginBottom:'5px'},color:\"#f50\"},errors.firstName),React.createElement(Input,{style:{marginBottom:'5px'},name:\"lastName\",onChange:handleChange,onBlur:handleBlur,value:values.lastName}),errors.lastName&&touched.lastName&&React.createElement(Tag,{style:{marginBottom:'5px'},color:\"#f50\"},errors.lastName),React.createElement(Input,{style:{marginBottom:'5px'},type:\"email\",name:\"email\",onChange:handleChange,onBlur:handleBlur,value:values.email}),errors.email&&touched.email&&React.createElement(Tag,{style:{marginBottom:'5px'},color:\"#f50\"},errors.email),React.createElement(Button,{onClick:function onClick(){return submitForm();},type:\"submit\",disabled:isSubmitting|(touched&&!isValid)},\"Submit\"));});}}]);return EditUserForm;}(Component);export{EditUserForm as default};","map":{"version":3,"sources":["/Users/Krasy8/IdeaProjects/Amigocode/FullStackAppTutorial/fullStackApp/src/js/src/forms/EditStudentForm.js"],"names":["React","Component","Formik","Input","Tag","Button","EditUserForm","props","submitter","initialValues","values","errors","email","test","firstName","lastName","setSubmitting","console","log","touched","handleChange","isValid","handleBlur","handleSubmit","isSubmitting","submitForm","marginBottom"],"mappings":"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","sourcesContent":["import React,  {Component} from 'react';\nimport { Formik } from 'formik';\nimport { Input, Tag, Button } from 'antd';\n\nexport default class EditUserForm extends Component {\n    render () {\n        const { submitter, initialValues } = this.props;\n        return (\n            <Formik\n                initialValues={initialValues}\n                validate={values => {\n                    let errors = {};\n                    if (!values.email) {\n                        errors.email = 'Required';\n                    } else if (\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                    ) {\n                        errors.email = 'Invalid email address';\n                    }\n                    if (!values.firstName) {\n                        errors.firstName = 'First name required';\n                    }\n                    if (!values.lastName) {\n                        errors.lastName = 'Last name required';\n                    }\n                    return errors;\n                }}\n                onSubmit={(values, { setSubmitting }) => {\n                    console.log(values)\n                    submitter(values);\n                    setSubmitting(false);\n                }}\n            >\n                {({\n                      values,\n                      errors,\n                      touched,\n                      handleChange,\n                      isValid,\n                      handleBlur,\n                      handleSubmit,\n                      isSubmitting,\n                      submitForm\n                      /* and other goodies */\n                  }) => (\n                    <form onSubmit={handleSubmit}>\n                        <Input\n                            style={{marginBottom: '5px'}}\n                            name=\"firstName\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.firstName}\n                        />\n                        {errors.firstName && touched.firstName && <Tag style={{marginBottom: '5px'}} color=\"#f50\">{errors.firstName}</Tag>}\n\n                        <Input\n                            style={{marginBottom: '5px'}}\n                            name=\"lastName\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.lastName}\n                        />\n                        {errors.lastName && touched.lastName && <Tag style={{marginBottom: '5px'}} color=\"#f50\">{errors.lastName}</Tag>}\n\n                        <Input\n                            style={{marginBottom: '5px'}}\n                            type=\"email\"\n                            name=\"email\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.email}\n                        />\n                        {errors.email && touched.email && <Tag style={{marginBottom: '5px'}} color=\"#f50\">{errors.email}</Tag>}\n\n                        <Button onClick = {() => submitForm()} type=\"submit\" disabled={isSubmitting | (touched && !isValid) }>\n                            Submit\n                        </Button>\n                    </form>\n                )}\n            </Formik>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}