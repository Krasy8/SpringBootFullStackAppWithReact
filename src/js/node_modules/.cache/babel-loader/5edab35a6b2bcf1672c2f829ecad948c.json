{"ast":null,"code":"var _jsxFileName = \"/Users/Krasy8/Projects/GitHub_Projects/FullStackAppWithReact/src/js/src/forms/AddStudentForm.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport { Input, Button, Tag } from \"antd\";\nimport { addNewStudent } from \"../client\";\nconst inputBottomMargin = {\n  marginBottom: \"10px\"\n};\nconst tagStyle = {\n  backgroundColor: \"#f50\",\n  color: \"white\",\n  ...inputBottomMargin\n};\n\nconst AddStudentForm = props => /*#__PURE__*/React.createElement(Formik, {\n  initialValues: {\n    firstName: '',\n    lastName: '',\n    email: '',\n    gender: ''\n  },\n  validate: values => {\n    let errors = {};\n\n    if (!values.firstName) {\n      errors.firstName = \"First Name required\";\n    }\n\n    if (!values.lastName) {\n      errors.lastName = \"Last Name required\";\n    }\n\n    if (!values.email) {\n      errors.email = \"Email required\";\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = \"Invalid email address\";\n    }\n\n    if (!values.gender) {\n      errors.gender = \"Gender required\";\n    } else if (![\"MALE\", \"male\", \"FEMALE\", \"female\"].includes(values.gender)) {\n      errors.gender = \"Gender must be (MALE, male, FEMALE, female)\";\n    }\n\n    return errors;\n  },\n  onSubmit: (student, {\n    setSubmitting\n  }) => {\n    addNewStudent(student).then(() => {\n      props.onSuccess();\n    }).catch(err => {\n      props.onFailure(err);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, ({\n  values,\n  errors,\n  touched,\n  handleChange,\n  handleBlur,\n  handleSubmit,\n  isSubmitting,\n  submitForm,\n  isValid\n  /* and other goodies */\n\n}) => /*#__PURE__*/React.createElement(\"form\", {\n  onSubmit: handleSubmit,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Input, {\n  style: inputBottomMargin,\n  name: \"firstName\",\n  onChange: handleChange,\n  onBlur: handleBlur,\n  value: values.firstName,\n  placeholder: \"First name, e.g John\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }\n}), errors.firstName && touched.firstName && /*#__PURE__*/React.createElement(Tag, {\n  style: tagStyle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 11\n  }\n}, errors.firstName), /*#__PURE__*/React.createElement(Input, {\n  style: inputBottomMargin,\n  name: \"lastName\",\n  onChange: handleChange,\n  onBlur: handleBlur,\n  value: values.lastName,\n  placeholder: \"Last name, e.g Smith\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }\n}), errors.lastName && touched.lastName && /*#__PURE__*/React.createElement(Tag, {\n  style: tagStyle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 11\n  }\n}, errors.lastName), /*#__PURE__*/React.createElement(Input, {\n  style: inputBottomMargin,\n  name: \"email\",\n  type: \"email\",\n  onChange: handleChange,\n  onBlur: handleBlur,\n  value: values.email,\n  placeholder: \"email, e.g example@gmail.com\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }\n}), errors.email && touched.email && /*#__PURE__*/React.createElement(Tag, {\n  style: tagStyle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 11\n  }\n}, errors.email), /*#__PURE__*/React.createElement(Input, {\n  style: inputBottomMargin,\n  name: \"gender\",\n  onChange: handleChange,\n  onBlur: handleBlur,\n  value: values.gender,\n  placeholder: \"Gender, e.g Male or Female\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }\n}), errors.gender && touched.gender && /*#__PURE__*/React.createElement(Tag, {\n  style: tagStyle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 11\n  }\n}, errors.gender), /*#__PURE__*/React.createElement(Button, {\n  onClick: () => submitForm(),\n  type: \"submit\",\n  disabled: isSubmitting | (touched && !isValid),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }\n}, \"Submit\")));\n\n_c = AddStudentForm;\nexport default AddStudentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddStudentForm\");","map":{"version":3,"sources":["/Users/Krasy8/Projects/GitHub_Projects/FullStackAppWithReact/src/js/src/forms/AddStudentForm.js"],"names":["React","Formik","Input","Button","Tag","addNewStudent","inputBottomMargin","marginBottom","tagStyle","backgroundColor","color","AddStudentForm","props","firstName","lastName","email","gender","values","errors","test","includes","student","setSubmitting","then","onSuccess","catch","err","onFailure","finally","touched","handleChange","handleBlur","handleSubmit","isSubmitting","submitForm","isValid"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\nimport { Input, Button, Tag } from \"antd\";\nimport { addNewStudent } from \"../client\";\n\nconst inputBottomMargin = { marginBottom: \"10px\" };\nconst tagStyle = {backgroundColor: \"#f50\", color: \"white\", ...inputBottomMargin};\n\nconst AddStudentForm = (props) => (\n  <Formik\n    initialValues={{ firstName: '', lastName: '', email: '', gender: '' }}\n    validate={values => {\n      let errors = {};\n\n      if (!values.firstName) {\n        errors.firstName = \"First Name required\";\n      }\n\n      if (!values.lastName) {\n        errors.lastName = \"Last Name required\";\n      }\n\n      if (!values.email) {\n        errors.email = \"Email required\";\n      } else if (\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n      ) {\n        errors.email = \"Invalid email address\";\n      }\n\n      if (!values.gender) {\n        errors.gender = \"Gender required\";\n      } else if (\n        ![\"MALE\", \"male\", \"FEMALE\", \"female\"].includes(values.gender)\n      ) {\n        errors.gender = \"Gender must be (MALE, male, FEMALE, female)\";\n      }\n\n      return errors;\n    }}\n    onSubmit={(student, { setSubmitting }) => {\n      addNewStudent(student).then(() => {\n        props.onSuccess();\n      })\n      .catch(err => {\n        props.onFailure(err);\n      })\n      .finally(() => {\n        setSubmitting(false);\n      })\n    }}\n  >\n    {({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting,\n      submitForm,\n      isValid\n      /* and other goodies */\n    }) => (\n      <form onSubmit={handleSubmit}>\n        <Input\n          style={inputBottomMargin}\n          name=\"firstName\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.firstName}\n          placeholder=\"First name, e.g John\"\n        />\n        {errors.firstName && touched.firstName && (\n          <Tag style={tagStyle}>{errors.firstName}</Tag>\n        )}\n        <Input\n          style={inputBottomMargin}\n          name=\"lastName\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.lastName}\n          placeholder=\"Last name, e.g Smith\"\n        />\n        {errors.lastName && touched.lastName && (\n          <Tag style={tagStyle}>{errors.lastName}</Tag>\n        )}\n        <Input\n          style={inputBottomMargin}\n          name=\"email\"\n          type=\"email\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.email}\n          placeholder=\"email, e.g example@gmail.com\"\n        />\n        {errors.email && touched.email && (\n          <Tag style={tagStyle}>{errors.email}</Tag>\n        )}\n        <Input\n          style={inputBottomMargin}\n          name=\"gender\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.gender}\n          placeholder=\"Gender, e.g Male or Female\"\n        />\n        {errors.gender && touched.gender && (\n          <Tag style={tagStyle}>{errors.gender}</Tag>\n        )}\n        <Button\n          onClick={() => submitForm()}\n          type=\"submit\"\n          disabled={isSubmitting | (touched && !isValid)}\n        >\n          Submit\n        </Button>\n      </form>\n    )}\n  </Formik>\n);\n\nexport default AddStudentForm;\n"]},"metadata":{},"sourceType":"module"}