{"ast":null,"code":"var _jsxFileName = \"/Users/Krasy8/Projects/GitHub_Projects/FullStackAppWithReact/src/js/src/forms/EditStudentForm.js\";\nimport React, { Component } from 'react';\nimport { Formik } from 'formik';\nimport { Input, Tag, Button } from 'antd';\nexport default class EditUserForm extends Component {\n  render() {\n    const {\n      submitter,\n      initialValues\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Formik, {\n      initialValues: initialValues,\n      validate: values => {\n        let errors = {};\n\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n\n        if (!values.firstName) {\n          errors.firstName = 'First name required';\n        }\n\n        if (!values.lastName) {\n          errors.lastName = 'Last name required';\n        }\n\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        console.log(values);\n        submitter(values);\n        setSubmitting(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }\n    }, ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      isValid,\n      handleBlur,\n      handleSubmit,\n      isSubmitting,\n      submitForm\n      /* and other goodies */\n\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      style: {\n        marginBottom: '5px'\n      },\n      name: \"firstName\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.firstName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }), errors.firstName && touched.firstName && /*#__PURE__*/React.createElement(Tag, {\n      style: {\n        marginBottom: '5px'\n      },\n      color: \"#f50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 67\n      }\n    }, errors.firstName), /*#__PURE__*/React.createElement(Input, {\n      style: {\n        marginBottom: '5px'\n      },\n      name: \"lastName\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.lastName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }), errors.lastName && touched.lastName && /*#__PURE__*/React.createElement(Tag, {\n      style: {\n        marginBottom: '5px'\n      },\n      color: \"#f50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 65\n      }\n    }, errors.lastName), /*#__PURE__*/React.createElement(Input, {\n      style: {\n        marginBottom: '5px'\n      },\n      type: \"email\",\n      name: \"email\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }), errors.email && touched.email && /*#__PURE__*/React.createElement(Tag, {\n      style: {\n        marginBottom: '5px'\n      },\n      color: \"#f50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 59\n      }\n    }, errors.email), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => submitForm(),\n      type: \"submit\",\n      disabled: isSubmitting | (touched && !isValid),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, \"Submit\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/Krasy8/Projects/GitHub_Projects/FullStackAppWithReact/src/js/src/forms/EditStudentForm.js"],"names":["React","Component","Formik","Input","Tag","Button","EditUserForm","render","submitter","initialValues","props","values","errors","email","test","firstName","lastName","setSubmitting","console","log","touched","handleChange","isValid","handleBlur","handleSubmit","isSubmitting","submitForm","marginBottom"],"mappings":"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","sourcesContent":["import React,  {Component} from 'react';\nimport { Formik } from 'formik';\nimport { Input, Tag, Button } from 'antd';\n\nexport default class EditUserForm extends Component {\n    render () {\n        const { submitter, initialValues } = this.props;\n        return (\n            <Formik\n                initialValues={initialValues}\n                validate={values => {\n                    let errors = {};\n                    if (!values.email) {\n                        errors.email = 'Required';\n                    } else if (\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                    ) {\n                        errors.email = 'Invalid email address';\n                    }\n                    if (!values.firstName) {\n                        errors.firstName = 'First name required';\n                    }\n                    if (!values.lastName) {\n                        errors.lastName = 'Last name required';\n                    }\n                    return errors;\n                }}\n                onSubmit={(values, { setSubmitting }) => {\n                    console.log(values)\n                    submitter(values);\n                    setSubmitting(false);\n                }}\n            >\n                {({\n                      values,\n                      errors,\n                      touched,\n                      handleChange,\n                      isValid,\n                      handleBlur,\n                      handleSubmit,\n                      isSubmitting,\n                      submitForm\n                      /* and other goodies */\n                  }) => (\n                    <form onSubmit={handleSubmit}>\n                        <Input\n                            style={{marginBottom: '5px'}}\n                            name=\"firstName\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.firstName}\n                        />\n                        {errors.firstName && touched.firstName && <Tag style={{marginBottom: '5px'}} color=\"#f50\">{errors.firstName}</Tag>}\n\n                        <Input\n                            style={{marginBottom: '5px'}}\n                            name=\"lastName\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.lastName}\n                        />\n                        {errors.lastName && touched.lastName && <Tag style={{marginBottom: '5px'}} color=\"#f50\">{errors.lastName}</Tag>}\n\n                        <Input\n                            style={{marginBottom: '5px'}}\n                            type=\"email\"\n                            name=\"email\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.email}\n                        />\n                        {errors.email && touched.email && <Tag style={{marginBottom: '5px'}} color=\"#f50\">{errors.email}</Tag>}\n\n                        <Button onClick = {() => submitForm()} type=\"submit\" disabled={isSubmitting | (touched && !isValid) }>\n                            Submit\n                        </Button>\n                    </form>\n                )}\n            </Formik>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}