{"ast":null,"code":"var _jsxFileName = \"/Users/Krasy8/Projects/GitHub_Projects/FullStackAppWithReact/src/js/src/App.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Container from \"./Container\";\nimport Footer from \"./Footer\";\nimport \"./App.css\";\nimport { getAllStudents, updateStudent, deleteStudent } from \"./client\";\nimport AddStudentForm from \"./forms/AddStudentForm\";\nimport EditStudentForm from './forms/EditStudentForm';\nimport { errorNotification } from \"./Notifications\";\nimport Icon from '@ant-design/icons';\nimport { Table, Avatar, Spin, Modal, Empty, PageHeader, Button, notification, Popconfirm } from 'antd'; // import {\n//   newTracker,\n//   enableActivityTracking,\n//   trackPageView\n// } from '@snowplow/browser-tracker';\n//\n// newTracker('sp', '0.0.0.0:9090', {\n//   appId: 'fullStackApp-frontend',\n// });\n//\n// enableActivityTracking({\n//   minimumVisitLength: 30,\n//   heartbeatDelay: 10\n// });\n// trackPageView();\n\nconst getIndicatorIcon = () => /*#__PURE__*/React.createElement(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24\n  },\n  spin: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 32\n  }\n});\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      students: [],\n      isFetching: false,\n      selectedStudent: {},\n      isAddStudentModalVisible: false,\n      isEditStudentModalVisible: false\n    };\n\n    this.openAddStudentModal = () => this.setState({\n      isAddStudentModalVisible: true\n    });\n\n    this.closeAddStudentModal = () => this.setState({\n      isAddStudentModalVisible: false\n    });\n\n    this.openEditStudentModal = () => this.setState({\n      isEditStudentModalVisible: true\n    });\n\n    this.closeEditStudentModal = () => this.setState({\n      isEditStudentModalVisible: false\n    });\n\n    this.openNotificationWithIcon = (type, message, description) => notification[type]({\n      message,\n      description\n    });\n\n    this.fetchStudents = () => {\n      this.setState({\n        isFetching: true\n      });\n      getAllStudents().then(res => res.json().then(students => {\n        console.log(students);\n        this.setState({\n          students,\n          isFetching: false\n        });\n      })).catch(error => {\n        console.log(error.error);\n        const message = error.error.message;\n        const description = error.error.error;\n        errorNotification(message, description);\n        this.setState({\n          isFetching: false\n        });\n      });\n    };\n\n    this.editUser = selectedStudent => {\n      this.setState({\n        selectedStudent\n      });\n      this.openEditStudentModal();\n    };\n\n    this.updateStudentFormSubmitter = student => {\n      updateStudent(student.studentId, student).then(() => {\n        this.openNotificationWithIcon('success', 'Student updated', `${student.studentId} has been updated`);\n        this.closeEditStudentModal();\n        this.fetchStudents();\n      }).catch(err => {\n        console.error(err.error);\n        this.openNotificationWithIcon('error', 'error', `(${err.error.status}) ${err.error.error}`);\n      });\n    };\n\n    this.deleteStudent = studentId => {\n      deleteStudent(studentId).then(() => {\n        this.openNotificationWithIcon('success', 'Student deleted', `${studentId} was deleted`);\n        this.fetchStudents();\n      }).catch(err => {\n        this.openNotificationWithIcon('error', 'error', `(${err.error.status}) ${err.error.error}`);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStudents();\n  }\n\n  render() {\n    const {\n      students,\n      isFetching,\n      isAddStudentModalVisible\n    } = this.state;\n\n    const commonElements = () => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      title: \"Add new student\",\n      visible: isAddStudentModalVisible,\n      onOk: this.closeAddStudentModal,\n      onCancel: this.closeAddStudentModal,\n      width: 1000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddStudentForm, {\n      onSuccess: () => {\n        this.closeAddStudentModal();\n        this.fetchStudents();\n      },\n      onFailure: error => {\n        const message = error.error.message;\n        const description = error.error.httpStatus;\n        errorNotification(message, description);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Modal, {\n      title: \"Edit\",\n      visible: this.state.isEditStudentModalVisible,\n      onOk: this.closeEditStudentModal,\n      onCancel: this.closeEditStudentModal,\n      width: 1000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(PageHeader, {\n      title: `${this.state.selectedStudent.studentId}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(EditStudentForm, {\n      initialValues: this.state.selectedStudent,\n      submitter: this.updateStudentFormSubmitter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Footer, {\n      numberOfStudents: students.length,\n      handleAddStudentClickEvent: this.openAddStudentModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }));\n\n    if (isFetching) {\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Spin, {\n        indicator: getIndicatorIcon(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    if (students && students.length) {\n      const columns = [{\n        title: \"\",\n        key: \"avatar\",\n        render: (text, student) => /*#__PURE__*/React.createElement(Avatar, {\n          size: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }\n        }, `${student.firstName.charAt(0).toUpperCase()}${student.lastName.charAt(0).toUpperCase()}`)\n      }, {\n        title: \"Student Id\",\n        dataIndex: \"studentId\",\n        key: \"studentId\"\n      }, {\n        title: \"First Name\",\n        dataIndex: \"firstName\",\n        key: \"firstName\"\n      }, {\n        title: \"Last Name\",\n        dataIndex: \"lastName\",\n        key: \"lastName\"\n      }, {\n        title: \"Email\",\n        dataIndex: \"email\",\n        key: \"email\"\n      }, {\n        title: \"Gender\",\n        dataIndex: \"gender\",\n        key: \"gender\"\n      }, {\n        title: 'Action',\n        key: 'action',\n        render: (text, record) => /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Popconfirm, {\n          placement: \"topRight\",\n          title: `Are you sure to delete ${record.studentId}`,\n          onConfirm: () => this.deleteStudent(record.studentId),\n          okText: \"Yes\",\n          cancelText: \"No\",\n          onCancel: e => e.stopPropagation(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"danger\",\n          onClick: e => e.stopPropagation(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }\n        }, \"Delete\")), /*#__PURE__*/React.createElement(Button, {\n          style: {\n            marginLeft: '5px'\n          },\n          type: \"primary\",\n          onClick: () => this.editUser(record),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }\n        }, \"Edit\"))\n      }];\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        style: {\n          marginBottom: \"100px\"\n        },\n        dataSource: students,\n        columns: columns,\n        pagination: false,\n        rowKey: \"studentId\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }\n      }), commonElements());\n    }\n\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Empty, {\n      description: /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 29\n        }\n      }, \"No students found\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }\n    }), commonElements());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Krasy8/Projects/GitHub_Projects/FullStackAppWithReact/src/js/src/App.js"],"names":["React","Component","Fragment","Container","Footer","getAllStudents","updateStudent","deleteStudent","AddStudentForm","EditStudentForm","errorNotification","Icon","Table","Avatar","Spin","Modal","Empty","PageHeader","Button","notification","Popconfirm","getIndicatorIcon","fontSize","App","state","students","isFetching","selectedStudent","isAddStudentModalVisible","isEditStudentModalVisible","openAddStudentModal","setState","closeAddStudentModal","openEditStudentModal","closeEditStudentModal","openNotificationWithIcon","type","message","description","fetchStudents","then","res","json","console","log","catch","error","editUser","updateStudentFormSubmitter","student","studentId","err","status","componentDidMount","render","commonElements","httpStatus","length","columns","title","key","text","firstName","charAt","toUpperCase","lastName","dataIndex","record","e","stopPropagation","marginLeft","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Container from \"./Container\";\nimport Footer from \"./Footer\";\nimport \"./App.css\";\nimport {\n  getAllStudents,\n  updateStudent,\n  deleteStudent\n} from \"./client\";\nimport AddStudentForm from \"./forms/AddStudentForm\";\nimport EditStudentForm from './forms/EditStudentForm';\nimport { errorNotification } from \"./Notifications\";\nimport Icon from '@ant-design/icons';\nimport {\n  Table,\n  Avatar,\n  Spin,\n  Modal,\n  Empty,\n  PageHeader,\n  Button,\n  notification,\n  Popconfirm\n} from 'antd';\n// import {\n//   newTracker,\n//   enableActivityTracking,\n//   trackPageView\n// } from '@snowplow/browser-tracker';\n//\n// newTracker('sp', '0.0.0.0:9090', {\n//   appId: 'fullStackApp-frontend',\n// });\n//\n// enableActivityTracking({\n//   minimumVisitLength: 30,\n//   heartbeatDelay: 10\n// });\n\n// trackPageView();\n\n\nconst getIndicatorIcon = () => <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass App extends Component {\n  state = {\n    students: [],\n    isFetching: false,\n    selectedStudent: {},\n    isAddStudentModalVisible: false,\n    isEditStudentModalVisible: false\n  };\n\n  componentDidMount() {\n    this.fetchStudents();\n  }\n\n  openAddStudentModal = () => this.setState({ isAddStudentModalVisible: true });\n\n  closeAddStudentModal = () => this.setState({ isAddStudentModalVisible: false });\n\n  openEditStudentModal = () => this.setState({ isEditStudentModalVisible: true });\n\n  closeEditStudentModal = () => this.setState({ isEditStudentModalVisible: false});\n\n  openNotificationWithIcon = (type, message, description) => notification[type]({message, description});\n\n  fetchStudents = () => {\n    this.setState({\n      isFetching: true\n    });\n    getAllStudents()\n      .then(res =>\n        res.json().then(students => {\n          console.log(students);\n          this.setState({\n            students,\n            isFetching: false\n          });\n        })\n      )\n      .catch(error => {\n        console.log(error.error);\n        const message = error.error.message;\n        const description = error.error.error;\n        errorNotification(message, description);\n        this.setState({\n          isFetching: false\n        });\n      });\n  };\n\n  editUser = selectedStudent => {\n    this.setState({selectedStudent});\n    this.openEditStudentModal();\n  };\n\n  updateStudentFormSubmitter = student => {\n    updateStudent(student.studentId, student).then(() => {\n      this.openNotificationWithIcon(\n          'success',\n          'Student updated',\n          `${student.studentId} has been updated`);\n      this.closeEditStudentModal();\n      this.fetchStudents();\n    }).catch(err => {\n      console.error(err.error);\n      this.openNotificationWithIcon(\n          'error',\n          'error',\n          `(${err.error.status}) ${err.error.error}`\n      );\n    });\n  };\n\n  deleteStudent = studentId => {\n    deleteStudent(studentId).then(() => {\n      this.openNotificationWithIcon('success', 'Student deleted', `${studentId} was deleted`);\n      this.fetchStudents();\n    }).catch(err => {\n      this.openNotificationWithIcon('error', 'error', `(${err.error.status}) ${err.error.error}`);\n    });\n  };\n\n  render() {\n    const { students, isFetching, isAddStudentModalVisible } = this.state;\n\n    const commonElements = () => (\n      <div>\n        <Modal\n          title=\"Add new student\"\n          visible={isAddStudentModalVisible}\n          onOk={this.closeAddStudentModal}\n          onCancel={this.closeAddStudentModal}\n          width={1000}\n        >\n          <AddStudentForm\n            onSuccess={() => {\n              this.closeAddStudentModal();\n              this.fetchStudents();\n            }}\n            onFailure={(error) => {\n              const message = error.error.message;\n              const description = error.error.httpStatus;\n              errorNotification(message, description);\n            }}\n          />\n        </Modal>\n\n        <Modal\n            title=\"Edit\"\n            visible={this.state.isEditStudentModalVisible}\n            onOk={this.closeEditStudentModal}\n            onCancel={this.closeEditStudentModal}\n            width={1000}\n        >\n          <PageHeader title={`${this.state.selectedStudent.studentId}`} />\n          <EditStudentForm\n            initialValues={this.state.selectedStudent}\n            submitter={this.updateStudentFormSubmitter} />\n        </Modal>\n\n        <Footer\n          numberOfStudents={students.length}\n          handleAddStudentClickEvent={this.openAddStudentModal}\n        />\n      </div>\n    );\n\n    if (isFetching) {\n      return (\n        <Container>\n          <Spin indicator={getIndicatorIcon()} />\n        </Container>\n      );\n    }\n\n    if (students && students.length) {\n\n      const columns = [\n        {\n          title: \"\",\n          key: \"avatar\",\n          render: (text, student) => (\n            <Avatar size=\"large\">\n              {`${student.firstName.charAt(0).toUpperCase()}${student.lastName.charAt(0).toUpperCase()}`}\n            </Avatar>\n          )\n        },\n        {\n          title: \"Student Id\",\n          dataIndex: \"studentId\",\n          key: \"studentId\"\n        },\n        {\n          title: \"First Name\",\n          dataIndex: \"firstName\",\n          key: \"firstName\"\n        },\n        {\n          title: \"Last Name\",\n          dataIndex: \"lastName\",\n          key: \"lastName\"\n        },\n        {\n          title: \"Email\",\n          dataIndex: \"email\",\n          key: \"email\"\n        },\n        {\n          title: \"Gender\",\n          dataIndex: \"gender\",\n          key: \"gender\"\n        },\n        {\n          title: 'Action',\n          key: 'action',\n          render: (text, record) => (\n            <Fragment>\n              <Popconfirm\n                placement=\"topRight\"\n                title={`Are you sure to delete ${record.studentId}`}\n                onConfirm={() => this.deleteStudent(record.studentId)} okText='Yes' cancelText='No'\n                onCancel={e => e.stopPropagation()}>\n                <Button type='danger' onClick={(e) => e.stopPropagation()}>Delete</Button>\n              </Popconfirm>\n              <Button style={{marginLeft: '5px'}} type='primary' onClick={() => this.editUser(record)}>Edit</Button>\n            </Fragment>\n          ),\n        }\n      ];\n\n      return (\n        <Container>\n          <Table\n            style={{ marginBottom: \"100px\" }}\n            dataSource={students}\n            columns={columns}\n            pagination={false}\n            rowKey=\"studentId\"\n          />\n          {commonElements()}\n        </Container>\n      );\n    }\n\n    return (\n      <Container>\n        <Empty description={<h1>No students found</h1>} />\n        {commonElements()}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}